<Project Sdk="Microsoft.Build.NoTargets/3.0.4">

  <!-- Public properties to configure runtime build. -->
  <PropertyGroup>
    <TargetFramework>net7.0</TargetFramework>

    <BundledNETCoreVersion>7.0.0-preview.4.22229.4</BundledNETCoreVersion>

    <NETCoreDownloadUrl Condition="$(NETCoreSdkRuntimeIdentifier) == 'win-x64'">
      https://download.visualstudio.microsoft.com/download/pr/040013af-267c-48ef-ae3b-a2e77dde61d5/6aa48aa27bd8ab42ad4ce1df1b2bbf7e/aspnetcore-runtime-7.0.0-preview.4.22251.1-win-x64.zip
    </NETCoreDownloadUrl>

    <NETCoreDownloadUrl Condition="$(NETCoreSdkRuntimeIdentifier) == 'linux-x64'">
      https://download.visualstudio.microsoft.com/download/pr/81fceda1-cffa-4301-8bef-d4fda5c84985/d6ecf648c8046afed6fde902ab452c63/aspnetcore-runtime-7.0.0-preview.4.22251.1-linux-x64.tar.gz
    </NETCoreDownloadUrl>

    <NETCoreDownloadUrl Condition="$(NETCoreSdkRuntimeIdentifier) == 'osx-x64'">
      https://download.visualstudio.microsoft.com/download/pr/744d3a1e-4ad7-45d9-bdf5-e98d63a3e180/7ecdf7a01ce968206d8278404d35580a/aspnetcore-runtime-7.0.0-preview.4.22251.1-osx-x64.tar.gz
    </NETCoreDownloadUrl>
  </PropertyGroup>

  <!-- Internal properties. Do not change manually. -->
  <PropertyGroup>
    <BaseGmodNETPublishInst>dotnet publish gm_dotnet_managed/GmodNET/GmodNET.csproj -c $(Configuration) -o build/gmodnet/</BaseGmodNETPublishInst>

    <CmakeGenerateWinFlags Condition="$(NETCoreSdkRuntimeIdentifier) == 'win-x64'">-G "Visual Studio 16 2019" -A x64</CmakeGenerateWinFlags>

    <CmakeBuildWinInst>cd obj/cmake_build &amp;&amp; cmake --build ./ -- /p:Configuration=Release</CmakeBuildWinInst>

    <CmakeBuildLinuxAndMacInst>cd obj/cmake_build &amp;&amp; cmake --build ./</CmakeBuildLinuxAndMacInst>
  </PropertyGroup>

  <ItemGroup>

  </ItemGroup>

  <Target Name="BuildRuntime" BeforeTargets="AfterBuild">
    <Message Text="Starting GmodNET Runtime build process" Importance="high" />
    <Exec Command="$(BaseGmodNETPublishInst)" ConsoleToMsBuild="true" />
    <Delete Files="build/gmodnet/GmodNET.exe;build/gmodnet/GmodNET;build/gmodnet/web.config" />
    <MakeDir Directories="obj/cmake_build" />
    <Exec Command="$(CmakeGenerateInst)" ConsoleToMsBuild="true" />
    <CallTarget Condition="$(NETCoreSdkRuntimeIdentifier) == 'win-x64'" Targets="CmakeBuildWindows" />
    <CallTarget Condition="$(NETCoreSdkRuntimeIdentifier) == 'linux-x64'" Targets="CmakeBuildLinux" />
    <CallTarget Condition="$(NETCoreSdkRuntimeIdentifier) == 'osx-x64'" Targets="CmakeBuildMac" />
    <CallTarget Targets="BundleRuntime" />
    <Copy SourceFiles="LICENSE" DestinationFiles="build/LICENSE" />
    <Copy SourceFiles="NOTICE" DestinationFiles="build/NOTICE" />

    <Exec Command="dotnet pack gm_dotnet_managed/GmodNET.API/GmodNET.API.csproj -c $(Configuration) -o nupkgs/" ConsoleToMsBuild="true" />

    <Exec Command="dotnet publish gm_dotnet_managed/Tests/Tests.csproj -c $(Configuration) -o Modules/Tests/" ConsoleToMsBuild="true" />

    <CallTarget Targets="RuntimeCleanUp" />
    <OnError ExecuteTargets="RuntimeCleanUp" />
  </Target>

  <Target Name="CmakeBuildWindows">
    <Exec Command="$(CmakeBuildWinInst)" ConsoleToMsBuild="true" />
    <Copy SourceFiles="build/Release/gmsv_dotnet_win64.dll" DestinationFiles="build/gmsv_dotnet_win64.dll" />
    <Copy SourceFiles="build/Release/dotnethelper.dll" DestinationFiles="build/dotnethelper.dll" />
    <Copy SourceFiles="build/gmsv_dotnet_win64.dll" DestinationFiles="build/gmcl_dotnet_win64.dll" />
    <RemoveDir Directories="build/Release" />
  </Target>

  <Target Name="CmakeBuildLinux">
    <Exec Command="$(CmakeBuildLinuxAndMacInst)" ConsoleToMsBuild="true" />
    <Copy SourceFiles="build/gmsv_dotnet_linux64.dll" DestinationFiles="build/gmcl_dotnet_linux64.dll" />
  </Target>

  <Target Name="CmakeBuildMac">
    <Exec Command="$(CmakeBuildLinuxAndMacInst)" ConsoleToMsBuild="true" />
    <Copy SourceFiles="build/gmsv_dotnet_osx64.dll" DestinationFiles="build/gmcl_dotnet_osx64.dll" />
  </Target>

  <Target Name="RuntimeCleanUp">
    <Message Text="Making clean-up"  Importance="high" />
    <RemoveDir Directories="obj/cmake_build" />
    <RemoveDir Directories="obj/netcore-$(NETCoreSdkRuntimeIdentifier)-$(BundledNETCoreVersion)" />
    <RemoveDir Directories="obj/aspnet-$(NETCoreSdkRuntimeIdentifier)-$(BundledAspVersion)" />
  </Target>

  <Target Name="BundleRuntime">
    <DownloadFile SourceUrl="$(NETCoreDownloadUrl)" DestinationFolder="obj" DestinationFileName="netcore-$(NETCoreSdkRuntimeIdentifier).arch" SkipUnchangedFiles="true" />
    <MakeDir Directories="build/dotnet" />
    <Unzip Condition="$(NETCoreSdkRuntimeIdentifier) == 'win-x64'" SourceFiles="obj/netcore-$(NETCoreSdkRuntimeIdentifier).arch" DestinationFolder="build/dotnet" OverwriteReadOnlyFiles="true" />
    <Exec Condition="$(NETCoreSdkRuntimeIdentifier) != 'win-x64'" Command="tar xvfz obj/netcore-$(NETCoreSdkRuntimeIdentifier).arch -C build/dotnet" ConsoleToMsBuild="true" />
  </Target>

  <Target Name="DeleteOldBuilds" BeforeTargets="BuildRuntime">
    <RemoveDir Directories="build" />
    <RemoveDir Directories="nupkgs" />
    <RemoveDir Directories="Modules" />
    <RemoveDir Directories="packed-build" />
  </Target>

  <Target Name="GetVersionFromTool" BeforeTargets="BuildRuntime;PackRuntimeBuild;PackLuaForPublish">
    <Exec Command="dotnet tool restore" />
    <Exec Command="dotnet tool run gmodnet-vt getVersion version.json" ConsoleToMsBuild="true">
			<Output TaskParameter="ConsoleOutput" PropertyName="RuntimeVersion" />
		</Exec>
		<Exec Command="dotnet tool run gmodnet-vt getVersion version.json --skip-build-data" ConsoleToMsBuild="true">
			<Output TaskParameter="ConsoleOutput" PropertyName="RuntimeVersionShort" />
		</Exec>
    <Exec Command="dotnet tool run gmodnet-vt getVersion version.json" ConsoleToMsBuild="true">
			<Output TaskParameter="ConsoleOutput" PropertyName="ApiVersion" />
		</Exec>
		<Exec Command="dotnet tool run gmodnet-vt getVersion version.json --skip-build-data" ConsoleToMsBuild="true">
			<Output TaskParameter="ConsoleOutput" PropertyName="ApiVersionShort" />
		</Exec>
    <CreateProperty Value="cd obj/cmake_build &amp;&amp; cmake -DSEM_VERSION:STRING=$(RuntimeVersion) -DNET_CORE_VERSION:STRING=$(BundledNETCoreVersion) ../../gm_dotnet_native $(CmakeGenerateWinFlags)">
            <Output
                TaskParameter="Value"
                PropertyName="CmakeGenerateInst" />
        </CreateProperty>
  </Target>

  <Target Name="PackRuntimeBuild">
    <MakeDir Directories="packed-build" />

    <ZipDirectory DestinationFile="packed-build/gmod-dot-net-windows.$(RuntimeVersionShort).zip" SourceDirectory="build" Condition="'$(NETCoreSdkRuntimeIdentifier)' == 'win-x64'" />

    <Exec Condition="'$(NETCoreSdkRuntimeIdentifier)' == 'linux-x64'" Command="cd build &amp;&amp; tar czfv ../packed-build/gmod-dot-net-linux.$(RuntimeVersionShort).tar.gz ." />

    <Exec Condition="'$(NETCoreSdkRuntimeIdentifier)' == 'osx-x64'" Command="cd build &amp;&amp; tar czfv ../packed-build/gmod-dot-net-osx.$(RuntimeVersionShort).tar.gz ." />
  </Target>

  <Target Name="PackLuaForPublish">
    <MakeDir Directories="lua-publish" />
  </Target>

</Project>
